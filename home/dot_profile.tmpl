export PATH=${PATH}:$HOME/scripts
export PATH=${PATH}:$HOME/.local/bin

# user-wide npm install
export PATH=${PATH}:$HOME/.node/bin
export NODE_PATH=$HOME/.node/lib/node_modules
export NPM_CONFIG_PREFIX=$HOME/.node

export EDITOR='nvim'
export NVIM_HOME=$HOME/{{- .nvim_home }}
export SYSTEMD_EDITOR=$EDITOR

{{ if and (hasPrefix "linux" .osid) (ne .osid "linux-termux") (not .is_wsl) }}
# use gpg ssh agent
export SSH_AGENT_PID=""
export SSH_AUTH_SOCK="${XDG_RUNTIME_DIR}/gnupg/S.gpg-agent.ssh"
export GPG_TTY=$(tty)
gpg-connect-agent updatestartuptty /bye >/dev/null
{{- end }}

{{ if and .is_wsl .usegpg4win -}}
# Use windows gpg agent socket - enables using yubikey in wsl
# Largely based on:
# https://jardazivny.medium.com/the-ultimate-guide-to-yubikey-on-wsl2-part-2-1d9546ef23a6

WIN_USERPROFILE_PATH=$(cmd.exe /C "echo %USERPROFILE%" 2>/dev/null | tr -d '\r' | tr '\\' '/' | sed 's#\:#\\:#')    
GPG4WIN_CONFIG_PATH="${WIN_USERPROFILE_PATH}/AppData/Local/gnupg"    
WSL2_SSH_PAGEANT_BIN="$HOME/.local/bin/wsl2-ssh-pageant.exe"

# SSH Socket
# Removing Linux SSH socket and replacing it by link to wsl2-ssh-pageant SSH socket
export SSH_AUTH_SOCK="$HOME/.ssh/agent.sock"
if ! ss -a | grep -q "$SSH_AUTH_SOCK"; then
    rm -rf "$SSH_AUTH_SOCK"
    if test -x "$WSL2_SSH_PAGEANT_BIN"; then
        (setsid nohup socat UNIX-LISTEN:"$SSH_AUTH_SOCK,fork" EXEC:"$WSL2_SSH_PAGEANT_BIN" >/dev/null 2>&1 &)
    else
        echo >&2 "WARNING: $WSL2_SSH_PAGEANT_BIN is not executable."
    fi
fi
# GPG Socket
# Removing Linux GPG Agent socket and replacing it by link to wsl2-ssh-pageant GPG socket
export GPG_AGENT_SOCK="$HOME/.gnupg/S.gpg-agent"
if ! ss -a | grep -q "$GPG_AGENT_SOCK"; then
    rm -rf "$GPG_AGENT_SOCK"
    if test -x "$WSL2_SSH_PAGEANT_BIN"; then
        (setsid nohup socat UNIX-LISTEN:"$GPG_AGENT_SOCK,fork" EXEC:"$WSL2_SSH_PAGEANT_BIN --gpgConfigBasepath ${GPG4WIN_CONFIG_PATH} --gpg S.gpg-agent" >/dev/null 2>&1 &)
    else
        echo >&2 "WARNING: $WSL2_SSH_PAGEANT_BIN is not executable."
    fi
fi
{{- end -}}