export PATH=${PATH}:$HOME/scripts
export PATH=${PATH}:$HOME/.local/bin

export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

# user-wide npm install
export PATH=${PATH}:$HOME/.node/bin
export NODE_PATH=$HOME/.node/lib/node_modules
export NPM_CONFIG_PREFIX=$HOME/.node

export EDITOR='nvim'
export NVIM_HOME=$HOME/{{- .nvim_home }}
export SYSTEMD_EDITOR=$EDITOR

{{ if and (hasPrefix "linux" .osid) (ne .osid "linux-termux") (not .is_wsl) }}
if [ -z "${SSH_AUTH_SOCK}" ]; then
    # use gpg ssh agent
    export SSH_AGENT_PID=""
    export SSH_AUTH_SOCK="${XDG_RUNTIME_DIR}/gnupg/S.gpg-agent.ssh"
    export GPG_TTY=$(tty)
    gpg-connect-agent updatestartuptty /bye >/dev/null
fi
{{- end }}

{{ if and .is_wsl .usegpg4win -}}
if [ -z "${SSH_AUTH_SOCK}" ]; then
    export SSH_AUTH_SOCK="$HOME/.ssh/agent.sock"
    export GPG_AGENT_SOCK="$(gpgconf --list-dir agent-socket)"

    {{ if  (not .usesystemd) }}

    # SSH Socket
    # Removing Linux SSH socket and replacing it by link to wsl2-ssh-pageant SSH socket
    if ! ss -a | grep -q "$SSH_AUTH_SOCK"; then
    (nohup ~/.local/bin/wsl-ssh-pageant-socket.sh ssh >/dev/null 2>&1 &)
    fi

    # GPG Socket
    # Removing Linux GPG Agent socket and replacing it by link to wsl2-ssh-pageant GPG socket
    if ! ss -a | grep -q "$GPG_AGENT_SOCK"; then
        (nohup ~/.local/bin/wsl-ssh-pageant-socket.sh gpg >/dev/null 2>&1 &)
    fi
    {{- end }}
fi
{{- end -}}