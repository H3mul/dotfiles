# Oh-My-Zsh plugins

".oh-my-zsh/custom/plugins/zsh-syntax-highlighting":
  type: "archive"
  url: "https://github.com/zsh-users/zsh-syntax-highlighting/archive/master.tar.gz"
  exact: true
  stripComponents: 1
  refreshPeriod: "168h"
".oh-my-zsh/custom/plugins/zsh-autosuggestions":
  type: "archive"
  url: "https://github.com/zsh-users/zsh-autosuggestions/archive/master.tar.gz"
  exact: true
  stripComponents: 1
  refreshPeriod: "168h"
".oh-my-zsh/custom/plugins/fzf-tab":
  type: "archive"
  url: "https://github.com/Aloxaf/fzf-tab/archive/master.tar.gz"
  exact: true
  stripComponents: 1
  refreshPeriod: "168h"

".local/fonts/nerd":
  type: "archive"
  url: "https://github.com/ryanoasis/nerd-fonts/releases/latest/download/DejaVuSansMono.zip"
  refreshPeriod: "168h"

{{ if or (eq .osid "linux-ubuntu") (eq .osid "linux-termux") }}
# fzf ubuntu install is broken, fix the missing file manually
# https://bugs.launchpad.net/ubuntu/+source/fzf/+bug/1928670
".fzf/key-bindings.zsh":
  type: "file"
  url: "https://github.com/junegunn/fzf/raw/master/shell/key-bindings.zsh"
  executable: true
  refreshPeriod: "168h"
{{- end }}

{{- if lookPath "tmux" }}
".tmux/plugins/tpm":
  type: "archive"
  url: "https://github.com/tmux-plugins/tpm/archive/master.tar.gz"
  exact: true
  stripComponents: 1
  refreshPeriod: "168h"
{{- end }}

{{ if .is_wsl }}
# For nvim to sync yank buffer with windows clipboard - needs to be in WSL path
# https://github.com/neovim/neovim/blob/fcfc87cb7727eb63265dc75476dc6ba56e0029c8/runtime/autoload/provider/clipboard.vim#L131
".local/bin/win32yank.exe":
  type: "archive-file"
  url: "https://github.com/equalsraf/win32yank/releases/latest/download/win32yank-x64.zip"
  executable: true
  refreshPeriod: "168h"
  path: "win32yank.exe"
{{- end }}

{{ if and .is_wsl .usegpg4win }}
# For using windows native gpg in wsl - see dot_profile
".local/bin/wsl2-ssh-pageant.exe":
  type: "file"
  url: "https://github.com/BlackReloaded/wsl2-ssh-pageant/releases/latest/download/wsl2-ssh-pageant.exe"
  executable: true
  refreshPeriod: "168h"
{{- end }}

".local/bin/kubebox":
  type: "file"
  url: "https://github.com/astefanutti/kubebox/releases/download/v0.10.0/kubebox-linux"
  executable: true
  refreshPeriod: "168h"

{{ $arch := .uname_arch }}
{{- if eq $arch "aarch64" -}}
{{ $arch = "arm64" }}
{{- end -}}
".local/bin/kubecolor":
  type: archive-file
  url: "https://github.com/hidetatz/kubecolor/releases/download/v0.0.25/kubecolor_0.0.25_Linux_{{ $arch }}.tar.gz"
  path: kubecolor
  refreshPeriod: "168h"

".config/k9s/skin.yml":
  type: "file"
  url: "https://github.com/axkirillov/k9s-tokyonight/raw/main/skin.yml"
  refreshPeriod: "168h"

{{- if lookPath "bat" }}
".config/bat/themes/tokyonight_storm.tmTheme":
  type: "file"
  url: "https://github.com/folke/tokyonight.nvim/raw/main/extras/sublime/tokyonight_storm.tmTheme"
  refreshPeriod: "168h"
{{- end }}

{{- if not .is_headless }}
".local/share/themes":
  type: "archive"
  url: "https://github.com/Fausto-Korpsvart/Tokyo-Night-GTK-Theme/archive/master.tar.gz"
  stripComponents: 2
  include: [ "*/themes/**" ]
  refreshPeriod: "168h"

  {{- if lookPath "tilix" }}
".config/tilix/schemes/tokyo-night.json":
  type: "file"
  url: "https://github.com/kevin-nel/tokyo-night-tilix-black-box-theme/raw/main/tokyo-night-storm.json"
  refreshPeriod: "168h"
  {{- end }}
{{- end }}

{{- if lookPath "k9s" }}
".config/k9s/skins/tokyonight.yaml":
  type: "file"
  url: "https://github.com/axkirillov/k9s-tokyonight/raw/main/skin.yml"
  refreshPeriod: "168h"
{{- end }}