{{- /* Defaults */ -}}
{{- $name := "Phillip Dykman" -}}
{{- $email := "phil.d324@gmail.com" -}}

{{- /* Pull data from chezmoi config */ -}}
{{- if hasKey . "name" -}}
{{-   $name = .name -}}
{{- end -}}
{{- if hasKey . "email" -}}
{{-   $email = .email -}}
{{- end -}}

{{- /* OS identification */ -}}
{{- /* From: https://www.chezmoi.io/user-guide/machines/linux/ */ -}}
{{- $osid := .chezmoi.os -}}
{{- if (env "TERMUX_VERSION") | not | not -}}
{{-   $osid = "linux-termux" -}}
{{- else if hasKey .chezmoi.osRelease "id" -}}
{{-   $osid = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.id -}}
{{- end -}}

{{- $chezmoiForce := or (has "--force" .chezmoi.args) (has "--force=true" .chezmoi.args) -}}
{{- $interactive := and stdinIsATTY (not $chezmoiForce) -}}
{{- $headless := or (env "SSH_CLIENT" | not | not) (not (or (env "DISPLAY") (env "WAYLAND_DISPLAY"))) -}}
{{- $wsl := or (env "WSL_DISTRO_NAME") (env "IS_WSL") | not | not -}}

{{- if $interactive -}}
{{-   range $i := until 99 -}}
{{-     $question := "‚ùî What is your full name" -}}
{{-     $answer := "" -}}
{{-     if $name -}}
{{-       $answer = promptString $question $name -}}
{{-     else -}}
{{-       $answer = promptString $question -}}
{{-     end -}}
{{-     if regexMatch "^[A-Z][-' a-zA-Z]+$" $answer -}}
{{-       $name = $answer -}}
{{-       writeToStdout (printf "‚úÖ Name set as '%s'\n" $name) -}}
{{-       break -}}
{{-     end -}}
{{-     writeToStdout (printf "‚ùå '%s' is an invalid name\n" $answer) -}}
{{-     if eq $i 98 -}}
{{-       writeToStdout "‚ùå ERROR: maximum tries exceeded\n" -}}
{{-       exit 1 -}}
{{-     end -}}
{{-   end -}}
{{-   range $i := until 99 -}}
{{-     $question := "‚ùî What is your email" -}}
{{-     $answer := "" -}}
{{-     if $email -}}
{{-       $answer = promptString $question $email -}}
{{-     else -}}
{{-       $answer = promptString $question -}}
{{-     end -}}
{{-     $answer = lower $answer -}}
{{-     if regexMatch "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$" $answer -}}
{{-       $email = $answer -}}
{{-       writeToStdout (printf "‚úÖ Email set as '%s'\n" $email) -}}
{{-       break -}}
{{-     end -}}
{{-     writeToStdout (printf "‚ùå '%s' is an invalid email\n" $answer) -}}
{{-     if eq $i 98 -}}
{{-       writeToStdout "‚ùå ERROR: maximum tries exceeded\n" -}}
{{-       exit 1 -}}
{{-     end -}}
{{-   end -}}
{{-   writeToStdout "\nüí° Tip: you can always make chezmoi ask this again by running `chezmoi init` without `--force`.\n" -}}
{{- end -}}

{{- /* This retains the value passed with --source on chezmoi init, which is used in the ../install.sh script */ -}}
sourceDir: "{{ .chezmoi.workingTree }}"

verbose: true

diff:
  exclude:
    - scripts
status:
  exclude:
    - always

data:
  name: "{{ $name }}"
  email: "{{ $email }}"

  osid: {{ $osid | quote }}
  is_wsl: {{ $wsl }}
  is_headless: {{ $headless }}

  nvim_home: ".config/nvim"
  usegpg4win: false